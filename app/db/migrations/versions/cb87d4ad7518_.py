"""empty message

Revision ID: cb87d4ad7518
Revises:
Create Date: 2025-07-14 08:48:21.511888

"""
import sqlalchemy as sa
from alembic import op

# revision identifiers
revision = "cb87d4ad7518"
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "cities",
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("latitude", sa.Float(), nullable=False),
        sa.Column("longitude", sa.Float(), nullable=False),
        sa.Column("country", sa.String(length=100), nullable=True),
        sa.Column("timezone", sa.String(length=50), nullable=True),
        sa.Column(
            "id", sa.UUID(), server_default=sa.text("gen_random_uuid()"), nullable=False
        ),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column(
            "is_deleted", sa.Boolean(), server_default=sa.text("false"), nullable=False
        ),
        sa.Column("deleted_at", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name", "country", name="uq_city_name_country"),
    )
    with op.batch_alter_table("cities", schema=None) as batch_op:
        batch_op.create_index(
            "idx_city_coordinates", ["latitude", "longitude"], unique=False
        )

    op.create_table(
        "weather_data",
        sa.Column("city_id", sa.UUID(), nullable=False),
        sa.Column("timestamp", sa.DateTime(), nullable=False),
        sa.Column("temperature", sa.Float(), nullable=True),
        sa.Column("precipitation", sa.Float(), nullable=True),
        sa.Column("humidity", sa.Float(), nullable=True),
        sa.Column("wind_speed", sa.Float(), nullable=True),
        sa.Column("data_source", sa.String(length=50), nullable=True),
        sa.Column(
            "id", sa.UUID(), server_default=sa.text("gen_random_uuid()"), nullable=False
        ),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column(
            "is_deleted", sa.Boolean(), server_default=sa.text("false"), nullable=False
        ),
        sa.Column("deleted_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(["city_id"], ["cities.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("city_id", "timestamp", name="uq_weather_city_timestamp"),
    )
    with op.batch_alter_table("weather_data", schema=None) as batch_op:
        batch_op.create_index(
            "idx_weather_city_date", ["city_id", "timestamp"], unique=False
        )
        batch_op.create_index("idx_weather_timestamp", ["timestamp"], unique=False)

    op.create_table(
        "weather_import_logs",
        sa.Column("city_id", sa.UUID(), nullable=False),
        sa.Column("start_date", sa.DateTime(), nullable=False),
        sa.Column("end_date", sa.DateTime(), nullable=False),
        sa.Column("records_imported", sa.Integer(), nullable=True),
        sa.Column("success", sa.Boolean(), nullable=True),
        sa.Column("error_message", sa.String(length=500), nullable=True),
        sa.Column("import_duration_seconds", sa.Float(), nullable=True),
        sa.Column(
            "id", sa.UUID(), server_default=sa.text("gen_random_uuid()"), nullable=False
        ),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column(
            "is_deleted", sa.Boolean(), server_default=sa.text("false"), nullable=False
        ),
        sa.Column("deleted_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(["city_id"], ["cities.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("weather_import_logs")
    with op.batch_alter_table("weather_data", schema=None) as batch_op:
        batch_op.drop_index("idx_weather_timestamp")
        batch_op.drop_index("idx_weather_city_date")

    op.drop_table("weather_data")
    with op.batch_alter_table("cities", schema=None) as batch_op:
        batch_op.drop_index("idx_city_coordinates")

    op.drop_table("cities")
    # ### end Alembic commands ###
